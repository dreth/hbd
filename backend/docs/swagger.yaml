definitions:
  structs.BirthdayFull:
    properties:
      date:
        example: "2021-01-01"
        type: string
      id:
        example: 1
        type: integer
      name:
        example: John Doe
        type: string
    type: object
  structs.BirthdayNameDateAdd:
    properties:
      date:
        example: "2021-01-01"
        type: string
      name:
        example: John Doe
        type: string
    required:
    - date
    - name
    type: object
  structs.BirthdayNameDateModify:
    properties:
      date:
        example: "2021-01-01"
        type: string
      id:
        example: 1
        type: integer
      name:
        example: John Doe
        type: string
    required:
    - date
    - id
    - name
    type: object
  structs.Error:
    properties:
      error:
        type: string
    type: object
  structs.LoginRequest:
    properties:
      email:
        example: example@lotiguere.com
        type: string
      password:
        example: 9cc76406913372c2b3a3474e8ebb8dc917bdb9c4a7c5e98c639ed20f5bcf4da1
        type: string
    required:
    - email
    - password
    type: object
  structs.LoginSuccess:
    properties:
      birthdays:
        items:
          $ref: '#/definitions/structs.BirthdayFull'
        type: array
      reminder_time:
        example: "15:04"
        type: string
      telegram_bot_api_key:
        example: 270485614:AAHfiqksKZ8WmR2zSjiQ7jd8Eud81ggE3e-3
        type: string
      telegram_user_id:
        example: "123456789"
        type: string
      timezone:
        example: America/New_York
        type: string
      token:
        type: string
    type: object
  structs.ModifyUserRequest:
    properties:
      new_email:
        example: example2@lotiguere.com
        type: string
      new_password:
        example: 9cc76406913372c2b3a3474e8ebb8dc917bdb9c4a7c5e98c639ed20f5bcf4da1
        type: string
      new_reminder_time:
        example: "15:04"
        type: string
      new_telegram_bot_api_key:
        example: 270485614:AAHfiqksKZ8WmR2zSjiQ7jd8Eud81ggE3e-3
        type: string
      new_telegram_user_id:
        example: "123456789"
        type: string
      new_timezone:
        example: America/New_York
        type: string
    required:
    - new_reminder_time
    - new_telegram_bot_api_key
    - new_telegram_user_id
    - new_timezone
    type: object
  structs.Password:
    properties:
      password:
        example: 9cc76406913372c2b3a3474e8ebb8dc917bdb9c4a7c5e98c639ed20f5bcf4da1
        type: string
    type: object
  structs.Ready:
    properties:
      status:
        type: string
    type: object
  structs.RegisterRequest:
    properties:
      email:
        example: example@lotiguere.com
        type: string
      password:
        example: 9cc76406913372c2b3a3474e8ebb8dc917bdb9c4a7c5e98c639ed20f5bcf4da1
        type: string
      reminder_time:
        example: "15:04"
        type: string
      telegram_bot_api_key:
        example: 270485614:AAHfiqksKZ8WmR2zSjiQ7jd8Eud81ggE3e-3
        type: string
      telegram_user_id:
        example: "123456789"
        type: string
      timezone:
        example: America/New_York
        type: string
    required:
    - email
    - password
    - reminder_time
    - telegram_bot_api_key
    - telegram_user_id
    - timezone
    type: object
  structs.Success:
    properties:
      success:
        type: boolean
    type: object
  structs.UserData:
    properties:
      birthdays:
        items:
          $ref: '#/definitions/structs.BirthdayFull'
        type: array
      id:
        example: 1
        type: integer
      reminder_time:
        example: "15:04"
        type: string
      telegram_bot_api_key:
        example: 270485614:AAHfiqksKZ8WmR2zSjiQ7jd8Eud81ggE3e-3
        type: string
      telegram_user_id:
        example: "123456789"
        type: string
      timezone:
        example: America/New_York
        type: string
    type: object
info:
  contact: {}
paths:
  /add-birthday:
    post:
      consumes:
      - application/json
      description: This endpoint adds a new birthday for the authenticated user. The
        request must include a valid JWT token.
      parameters:
      - description: Add birthday
        in: body
        name: birthday
        required: true
        schema:
          $ref: '#/definitions/structs.BirthdayNameDateAdd'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.BirthdayFull'
        "400":
          description: Invalid request or date format
          schema:
            $ref: '#/definitions/structs.Error'
        "500":
          description: Failed to insert birthday
          schema:
            $ref: '#/definitions/structs.Error'
      security:
      - Bearer: []
      summary: Add a new birthday
      tags:
      - birthdays
      x-order: 7
  /check-birthdays:
    post:
      consumes:
      - application/json
      description: This endpoint checks for user reminders through a POST request.
        The request must include a valid JWT token.
      parameters:
      - description: Check reminders
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/structs.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.Success'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/structs.Error'
        "500":
          description: Error querying users
          schema:
            $ref: '#/definitions/structs.Error'
      security:
      - Bearer: []
      summary: Check user reminders
      tags:
      - reminders
      x-order: 6
  /delete-birthday:
    delete:
      consumes:
      - application/json
      description: This endpoint deletes a birthday for the authenticated user. The
        request must include a valid JWT token.
      parameters:
      - description: Delete birthday
        in: body
        name: birthday
        required: true
        schema:
          $ref: '#/definitions/structs.BirthdayNameDateModify'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.Success'
        "400":
          description: Invalid request or date format
          schema:
            $ref: '#/definitions/structs.Error'
        "500":
          description: Failed to delete birthday
          schema:
            $ref: '#/definitions/structs.Error'
      security:
      - Bearer: []
      summary: Delete a birthday
      tags:
      - birthdays
      x-order: 8
  /delete-user:
    delete:
      consumes:
      - application/json
      description: This endpoint deletes a user based on their email obtained from
        the JWT token. The request must include a valid JWT token.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.Success'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/structs.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/structs.Error'
        "500":
          description: Failed to delete user
          schema:
            $ref: '#/definitions/structs.Error'
      security:
      - Bearer: []
      summary: Delete a user
      tags:
      - auth
      x-order: 5
  /generate-password:
    get:
      description: This endpoint generates a new password for the user.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.Password'
        "500":
          description: Failed to generate password
          schema:
            $ref: '#/definitions/structs.Error'
      summary: Generate a new password
      tags:
      - auth
      x-order: 1
  /health:
    get:
      description: This endpoint checks the readiness of the service and returns a
        status.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.Ready'
      summary: Check service readiness
      tags:
      - health
  /login:
    post:
      consumes:
      - application/json
      description: This endpoint logs in a user by validating their email and password.
        Upon successful authentication, it generates a JWT token and returns the user's
        details along with the filtered list of birthdays.
      parameters:
      - description: Login user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/structs.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.LoginSuccess'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/structs.Error'
        "401":
          description: Invalid email or password
          schema:
            $ref: '#/definitions/structs.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/structs.Error'
      summary: Login a user
      tags:
      - auth
      x-order: 3
  /me:
    get:
      description: This endpoint returns the authenticated user's data including Telegram
        bot API key, user ID, reminder time, and birthdays. The request must include
        a valid JWT token.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.UserData'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/structs.Error'
      security:
      - Bearer: []
      summary: Get user data
      tags:
      - auth
  /modify-birthday:
    put:
      consumes:
      - application/json
      description: This endpoint modifies a birthday for the authenticated user. The
        request must include a valid JWT token.
      parameters:
      - description: Modify birthday
        in: body
        name: birthday
        required: true
        schema:
          $ref: '#/definitions/structs.BirthdayNameDateModify'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.Success'
        "400":
          description: Invalid request or date format
          schema:
            $ref: '#/definitions/structs.Error'
        "500":
          description: Failed to update birthday
          schema:
            $ref: '#/definitions/structs.Error'
      security:
      - Bearer: []
      summary: Modify a birthday
      tags:
      - birthdays
      x-order: 9
  /modify-user:
    put:
      consumes:
      - application/json
      description: This endpoint modifies a user's details such as Telegram bot API
        key, reminder time, and more. The request must include a valid JWT token.
        When modifying the email or password, a new JWT token is generated and returned.
        Otherwise, the user's data is returned without a new token.
      parameters:
      - description: Modify user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/structs.ModifyUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User data without a new token if no email or password changes
          schema:
            $ref: '#/definitions/structs.UserData'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/structs.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/structs.Error'
        "500":
          description: Failed to update user or process request
          schema:
            $ref: '#/definitions/structs.Error'
      security:
      - Bearer: []
      summary: Modify a user's details
      tags:
      - auth
      x-order: 4
  /register:
    post:
      consumes:
      - application/json
      description: This endpoint registers a new user with their email, Telegram bot
        API key, and other details.
      parameters:
      - description: Register user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/structs.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.LoginSuccess'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/structs.Error'
        "409":
          description: Email or Telegram bot API key already registered
          schema:
            $ref: '#/definitions/structs.Error'
        "500":
          description: Failed to create user
          schema:
            $ref: '#/definitions/structs.Error'
      summary: Register a new user
      tags:
      - auth
      x-order: 2
swagger: "2.0"
